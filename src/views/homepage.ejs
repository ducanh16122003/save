<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hello with Eric</title>
</head>

<body>
    <h1>Hello world with Eric</h1>
    <form method="POST" action="/setup-profile">
        <button type="submit">Setup profile</button>
    </form>

    <br />

    <form method="POST" action="/setup-persistent-menu">
        <button type="submit">Setup persistent menu</button>
    </form>

    <!DOCTYPE html>
    <html lang="vi">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Qu·∫£n l√Ω b√†n</title>
        <script defer src="../public/script.js"></script>
        <style>
            table { width: 100%; border-collapse: collapse; }
            th, td { padding: 10px; border: 1px solid black; text-align: center; }
            .available { background-color: lightgreen; }
            .occupied { background-color: lightcoral; }
        </style>
    </head>
    <body>
    <h2>Danh s√°ch b√†n</h2>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>T√™n b√†n</th>
            <th>S·ª©c ch·ª©a</th>
            <th>V·ªã tr√≠</th>
            <th>Tr·∫°ng th√°i</th>
        </tr>
        <tbody id="table-list"></tbody>
    </table>
    
    <h2>Th√™m b√†n</h2>
    <form id="table-form">
        <input type="hidden" id="table-id">
        <label>T√™n b√†n:</label>
        <input type="text" id="name">
        <label>S·ª©c ch·ª©a:</label>
        <input type="number" id="capacity">
        <label>V·ªã tr√≠:</label>
        <input type="text" id="position">
        <label>Tr·∫°ng th√°i:</label>
        <select id="status">
            <option value="Available">Available</option>
            <option value="Occupied">Occupied</option>
        </select>
        <button type="button" onclick="saveTable()">L∆∞u</button>
        <button type="reset">Nh·∫≠p l·∫°i</button>
    </form>
        
    <script src="/js/script.js"></script>

    <script>
// üü¢ H√ÄM T·∫¢I DANH S√ÅCH B√ÄN
function loadTables() {
    fetch("/tables") // G·ªçi API l·∫•y danh s√°ch b√†n
        .then(response => response.json())
        .then(data => {
            console.log("D·ªØ li·ªáu t·ª´ server:", data); // Ki·ªÉm tra d·ªØ li·ªáu t·ª´ server
            const tableBody = document.getElementById("table-list");
            tableBody.innerHTML = ""; // X√≥a d·ªØ li·ªáu c≈© (n·∫øu c√≥)

            data.forEach(table => {
                const row = `
                    <tr>
                        <td>${table.id}</td>
                        <td>${table.name}</td>
                        <td>${table.capacity}</td>
                        <td>${table.position}</td>
                        <td>${table.status}</td>
                        <td>
                            <button onclick="editTable(${table.id}, '${table.name}', ${table.capacity}, '${table.position}', '${table.status}')">S·ª≠a</button>
                            <button onclick="deleteTable(${table.id})">X√≥a</button>
                        </td>
                    </tr>
                `;
                tableBody.innerHTML += row;
            });
        })
        .catch(error => console.error("L·ªói khi l·∫•y d·ªØ li·ªáu:", error));
}

// üü° H√ÄM TH√äM HO·∫∂C C·∫¨P NH·∫¨T B√ÄN
function saveTable() {
    const id = document.getElementById("table-id").value.trim();
    const name = document.getElementById("name").value;
    const capacity = document.getElementById("capacity").value;
    const position = document.getElementById("position").value;
    const status = document.getElementById("status").value;

    const tableData = { name, capacity, position, status };

    if (id) {
        // üîÑ C·∫≠p nh·∫≠t b√†n (c√≥ ID)
        fetch(`/tables/${id}`, {
            method: "PUT",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(tableData)
        })
        .then(response => response.json())
        .then(() => {
            console.log("B√†n ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t:", id);
            resetForm();
            loadTables();
        })
        .catch(error => console.error("L·ªói khi c·∫≠p nh·∫≠t b√†n:", error));
    } else {
        // ‚ûï Th√™m b√†n m·ªõi (kh√¥ng c√≥ ID)
        fetch("/tables", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(tableData)
        })
        .then(response => response.json())
        .then(() => {
            console.log("B√†n m·ªõi ƒë√£ ƒë∆∞·ª£c th√™m!");
            resetForm();
            loadTables();
        })
        .catch(error => console.error("L·ªói khi th√™m b√†n:", error));
    }
}

// üü† H√ÄM CH·ªàNH S·ª¨A B√ÄN
function editTable(id, name, capacity, position, status) {
    document.getElementById("table-id").value = id; // L∆∞u ID b√†n c·∫ßn s·ª≠a
    document.getElementById("name").value = name;
    document.getElementById("capacity").value = capacity;
    document.getElementById("position").value = position;
    document.getElementById("status").value = status;
}

// üî¥ H√ÄM X√ìA B√ÄN
function deleteTable(id) {
    if (confirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a b√†n n√†y?")) {
        fetch(`/tables/${id}`, {
            method: "DELETE"
        })
        .then(response => response.json())
        .then(() => {
            console.log("B√†n ƒë√£ ƒë∆∞·ª£c x√≥a:", id);
            loadTables();
        })
        .catch(error => console.error("L·ªói khi x√≥a b√†n:", error));
    }
}

// üü£ H√ÄM RESET FORM SAU KHI L∆ØU
function resetForm() {
    document.getElementById("table-id").value = "";
    document.getElementById("name").value = "";
    document.getElementById("capacity").value = "";
    document.getElementById("position").value = "";
    document.getElementById("status").value = "Available";
}

            </script>
    </body>
    </html>

    <h2>S∆° ƒë·ªì b√†n ƒÉn</h2>
    <div id="restaurant-layout">
        <div id="table-map"></div>
    </div>    
<script>
fetch("/tables")
    .then(response => response.json())
    .then(data => {
        const tableList = document.getElementById("table-list");
        const tableMap = document.getElementById("table-map");

        data.forEach(table => {
            // Hi·ªÉn th·ªã trong b·∫£ng danh s√°ch
            let row = document.createElement("tr");
            row.innerHTML = `
                <td>${table.id}</td>
                <td>${table.name}</td>
                <td>${table.capacity}</td>
                <td>${table.position}</td>
                <td>${table.status}</td>
            `;
            tableList.appendChild(row);

            // Hi·ªÉn th·ªã s∆° ƒë·ªì b√†n
            let tableDiv = document.createElement("div");
            tableDiv.classList.add("table-item");
            if (table.status === "Occupied") {
                tableDiv.classList.add("occupied");
            }
            tableDiv.innerText = table.name;
            tableMap.appendChild(tableDiv);
        });
    })
    .catch(error => console.error("L·ªói khi t·∫£i danh s√°ch b√†n:", error));
</script>

<script>
    document.getElementById("table-form").addEventListener("submit", function (event) {
        event.preventDefault(); // NgƒÉn trang reload
    
        const name = document.getElementById("name").value;
        const capacity = document.getElementById("capacity").value;
        const position = document.getElementById("position").value;
        const status = document.getElementById("status").value;
    
        const data = { name, capacity, position, status };
    
        fetch("/tables", {
            method: "POST", // Ho·∫∑c "PUT" n·∫øu s·ª≠a
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
            console.log("K·∫øt qu·∫£:", result);
            alert(result.message);
            location.reload(); // Load l·∫°i trang ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch b√†n
        })
        .catch(error => console.error("L·ªói:", error));
    });
    </script>